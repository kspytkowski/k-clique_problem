/*
 * authors: Wojciech Kasperek & Krzysztof Spytkowski
 * Each line should be prefixed with  * 
 */
package GUI;

import Controller.ApplicationController;
import exceptions.GeneticAlgorithmException;
import exceptions.NoPossibilityToCreateGraphException;
import exceptions.ProblemWithReadingGraphFromFileException;
import graph.GraphRepresentation;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author wukat
 */
public class GraphGenerationPanel extends javax.swing.JPanel {

    private GraphRepresentation graphCreator = null;
    private final GraphPanel graphPanel;
    private final ApplicationController controller;

    /**
     * Creates new form GraphGeneration
     */
    public GraphGenerationPanel(GraphPanel graphPanel, ApplicationController controller) {
        initComponents();
        this.graphPanel = graphPanel;
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generationParameters = new javax.swing.JPanel();
        verticesCount = new javax.swing.JSpinner(new SpinnerNumberModel(10, 0, 2000, 1));
        verticesCountLabel = new javax.swing.JLabel();
        edgesCount = new javax.swing.JSpinner(new SpinnerNumberModel(10, 0, 2000, 1));
        edgesCountLabel = new javax.swing.JLabel();
        isCliqueDemanded = new javax.swing.JCheckBox();
        demandedCliqueSize = new javax.swing.JSpinner(new SpinnerNumberModel(5, 0, 2000, 1));
        demandedCliqueSizeLabel = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();
        loadingPanel = new javax.swing.JPanel();
        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        graphFileName = new javax.swing.JTextField();

        generationParameters.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Generation parameters"))));

        verticesCountLabel.setText("Vertices");

        edgesCountLabel.setText("Edges");

        isCliqueDemanded.setText("demand clique");
        isCliqueDemanded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isCliqueDemandedActionPerformed(evt);
            }
        });

        demandedCliqueSize.setEnabled(false);

        demandedCliqueSizeLabel.setText("Clique size");
        demandedCliqueSizeLabel.setEnabled(false);

        generateButton.setText("Generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout generationParametersLayout = new javax.swing.GroupLayout(generationParameters);
        generationParameters.setLayout(generationParametersLayout);
        generationParametersLayout.setHorizontalGroup(
            generationParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generationParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generationParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generationParametersLayout.createSequentialGroup()
                        .addComponent(generateButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generationParametersLayout.createSequentialGroup()
                        .addComponent(verticesCountLabel)
                        .addGap(6, 6, 6)
                        .addComponent(verticesCount, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(edgesCountLabel)
                        .addGap(2, 2, 2)
                        .addComponent(edgesCount, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(isCliqueDemanded)
                        .addGap(18, 18, 18)
                        .addComponent(demandedCliqueSizeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(demandedCliqueSize, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        generationParametersLayout.setVerticalGroup(
            generationParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generationParametersLayout.createSequentialGroup()
                .addGroup(generationParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verticesCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verticesCountLabel)
                    .addComponent(edgesCountLabel)
                    .addComponent(edgesCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isCliqueDemanded)
                    .addComponent(demandedCliqueSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(demandedCliqueSizeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loadingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("File options"));

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        graphFileName.setText("graph name");
        graphFileName.setEnabled(false);

        javax.swing.GroupLayout loadingPanelLayout = new javax.swing.GroupLayout(loadingPanel);
        loadingPanel.setLayout(loadingPanelLayout);
        loadingPanelLayout.setHorizontalGroup(
            loadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(loadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graphFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        loadingPanelLayout.setVerticalGroup(
            loadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loadingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton)
                    .addComponent(saveButton)
                    .addComponent(graphFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generationParameters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loadingPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generationParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        JFileChooser databaseFileChooser = new JFileChooser();
        int option = databaseFileChooser.showDialog(this, "Load");
        if (option == JFileChooser.APPROVE_OPTION) {
            try {
                graphCreator = new GraphRepresentation(databaseFileChooser.getSelectedFile().getAbsolutePath());
acceptNewGraph();
            } catch (NoPossibilityToCreateGraphException | ProblemWithReadingGraphFromFileException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Warning", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_loadButtonActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        if (!isCliqueDemanded.isSelected()) {
            try {
                graphCreator = new GraphRepresentation((int) verticesCount.getValue(), (int) edgesCount.getValue());
                acceptNewGraph();
            } catch (NoPossibilityToCreateGraphException | GeneticAlgorithmException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            try {
                graphCreator = new GraphRepresentation((int) verticesCount.getValue(), (int) edgesCount.getValue(), (int) demandedCliqueSize.getValue());
                acceptNewGraph();
            } catch (NoPossibilityToCreateGraphException | GeneticAlgorithmException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_generateButtonActionPerformed

    public void acceptNewGraph() {
        graphPanel.displayNewGraph(graphCreator.getGraph());
        controller.setGraphRepresentation(graphCreator);
        saveButton.setEnabled(true);
        graphFileName.setEnabled(true);
    }
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JFileChooser directoryChooser = new JFileChooser();
        directoryChooser.setApproveButtonText("Choose directory");
        directoryChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (directoryChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            if (graphFileName.getText() != null) {
                try {
                    graphCreator.writeGraphToFile(directoryChooser.getSelectedFile().getAbsolutePath(), graphFileName.getText().trim());
                } catch (ProblemWithReadingGraphFromFileException | GeneticAlgorithmException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Fill in name field!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void isCliqueDemandedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isCliqueDemandedActionPerformed
        demandedCliqueSize.setEnabled(!demandedCliqueSize.isEnabled());
        demandedCliqueSizeLabel.setEnabled(!demandedCliqueSizeLabel.isEnabled());
    }//GEN-LAST:event_isCliqueDemandedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner demandedCliqueSize;
    private javax.swing.JLabel demandedCliqueSizeLabel;
    private javax.swing.JSpinner edgesCount;
    private javax.swing.JLabel edgesCountLabel;
    private javax.swing.JButton generateButton;
    private javax.swing.JPanel generationParameters;
    private javax.swing.JTextField graphFileName;
    private javax.swing.JCheckBox isCliqueDemanded;
    private javax.swing.JButton loadButton;
    private javax.swing.JPanel loadingPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JSpinner verticesCount;
    private javax.swing.JLabel verticesCountLabel;
    // End of variables declaration//GEN-END:variables
}
